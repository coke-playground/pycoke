from typing import Any, Awaitable

class CokeTaskAwaiter:
    def __await__(self) -> Awaitable[Any]: ...

class MyException: ...

class TaskException: ...

class StrQueue:
    def __init__(self, max_size: int): ...
    def try_push_back(self, value: str) -> bool: ...
    def push_back(self, value: str) -> Awaitable[int]: ...
    def close(self) -> None: ...

def sleep(sec: float) -> Awaitable[None]: ...

def return_int(val: int) -> Awaitable[int]: ...

def return_string(val: str) -> Awaitable[str]: ...

def throw_exception(val: int) -> Awaitable[None]: ...

def complex_work(url: str, filepath: str) -> Awaitable[None]: ...

def do_work(que: StrQueue) -> Awaitable[None]: ...

def wait() -> None: ...
